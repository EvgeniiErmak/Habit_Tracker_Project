# docker-compose.yml

version: '3.8'

services:
  django:
    build:
      context: .
      dockerfile: Dockerfile.django
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
      - celery

  celery:
    build:
      context: .
      dockerfile: Dockerfile.celery
    command: celery -A config worker --loglevel=info --uid=1000
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - db
      - redis
    # Запускать контейнер Celery после контейнеров PostgreSQL и Redis
    entrypoint: >
      bash -c "while ! nc -z db 5432 && ! nc -z redis 6379; do sleep 1; done; celery -A config worker --loglevel=info --uid=1000"

  db:
    image: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}

  redis:
    image: redis:alpine

volumes:
  postgres_data:
